continue
@friend.language_ids
@friend.users
@friend.user_ids
@friend.language_ids
friend_params
@friend.languages
@friend.update(friend_params)
@friend = Friend.find(params[:id])
continue
@friend.languages
@friend.language_ids
@friend.update(friend_params)
@friend.language_ids
@friend = Friend.find(params[:id])
friend_params
continue
params[:tab]
params
continue
params[:tab]
continue
uri.path
uri = URI(request.env['HTTP_REFERER'])
request.env['HTTP_REFERER']
continue
request.env['HTTP_REFERER']
request['HTTP_REFERER']
request
continue
path[:controller]
request
request.env['PATH_INFO']
continue
request.env['PATH_INFO']
request
request.env['PATH_INFO']
current_url
current_path
continue
    end
      end.join.html_safe
        content_tag(:li, "#{accompaniement.user.name} (#{accompaniement_details(accompaniement)})")
      activity.accompaniements.each do |accompaniement|
content_tag :ul do
continue
content_tag :li, "#{accompaniement.user.name} (#{accompaniement_details(accompaniement)})"
continue
content_tag :li, "#{accompaniement.user.name} (#{accompaniement_details(accompaniement)})"
accompaniement.user.name
continue
render 'item', locals: {activity: activity}
activity
continue
activity
continue
save_and_open_page
continue
save_and_open_page
continue
save_and_open_page
continue
params
current_tab
continue
current_tab
continue
save_and_open_page
continue
@asylum_application_draft = friend.asylum_application_drafts.new
continue
@asylum_application_draft = friend.asylum_application_drafts.new
continue
asylum_application_draft_params
asylum_application_draft
continue
@asylum_application_draft = AsylumApplicationDraft.find(params[:id])
friend
params
asylum_application_draft_params
asylum_application_draft
continue
asylum_application_draft = friend.asylum_application_drafts.build(asylum_application_draft_params)
continue
friend
continue
params
continue
@asylum_application_draft ||= AsylumApplicationDraft.find(asylum_application_draft_params[:id])
continue
asylum_application_draft_params
params
continue
params
continue
params
continue
draft.users.map(&:name).to_sentence
draft.users.map(&:name)
continue
d.users
d.save
d.user_ids = [1]
User.first.id
d.user_ids
d = AsylumApplicationDraft.create(friend_id: Friend.first.id)
params
continue
family_member_destroy_params
continue
family_member_destroy_params
continue
family_member_destroy_params
continue
family_member_destroy_params
params
continue
params
continue
params
continue
params
continue
find("##{field_id}_chosen")
field_id = field_id[:from]
continue
field_id = find_field(options[:from])[:id]
continue
find('a.chzn-single').click
continue
field_id = find_field('#family_member_constructor_relation_id')
field_id = find_field('##{options[:from]}')
field_id = find_field(options[:from])
field_id = find_field('Friend')[:id]
options[:from]
field_id = find_field(options[:from])[:id]
continue
save_and_open_page
family_member = Friend.last
continue
save_and_open_page
family_member = Friend.last
continue
Friend.first
Friend.last
save_and_open_page
Friend.count
continue
save_and_open_page
Friend.all.count
continue
select 'Spouse', from: 'Relationship'
continue
save_and_open_page
continue
 @relation_id = params[:relation_id].present? ? params[:relation_id].to_i : nil
 @relation_id = params[:relation_id] ? params[:relation_id].to_i : nil
continue
params[:relation_id]?
params[:relation_id]
 @relation_id = params[:relation_id] ? params[:relation_id].to_i : nil
@relation_id
continue
@relation_id
continue
self
continue
params[:relation_id]
params[:relation_id].to_i || nil
continue
self
continue
display_validation_errors(family_member_constructor)
family_member_constructor
continue
self
continue
self
continue
family_member_constructor.errors.full_messages
family_member_constructor.errors.messages
family_member_constructor.errors
family_member_constructor
continue
family_member_constructor
@family_member_constructor
continue
@family_member_constructor
family_member_constructor
continue
family_member_constructor
friend
continue
self.errors.messages
self.valid?
self
continue
family_member_constructor.valid?
family_member_constructor = FamilyMemberConstructor.new(family_member_constructor_params)
family_member_constructor_params[:params]
family_member_constructor = FamilyMemberConstructor.new(params: family_member_constructor_params)
family_member_constructor_params
continue
family_member_constructor_params
continue
params
family_member_params
continue
params
self
continue
params
params[:related_id]
SpousalRelationship.create(friend_id: params[:friend_id], spouse_id: params[:related_id])
params[:relationship]
continue
ParentChildRelationship.new(parent_id: 1)
ParentChildRelationship.new(parent_id: params[:relation_id].to_i, child_id: params[:friend_id].to_i)
params[:friend_id].to_i
params[:relation_id].to_i
ParentChildRelationship.create(parent_id: params[:relation_id].to_i, child_id: params[:friend_id].to_i)
continue
ParentChildRelationship.create(parent_id: params[:relation_id], child_id: params[:friend_id].to
ParentChildRelationship.create(parent_id: params[:relation_id], child_id: params[:friend_id])
params[:relation_id]
child_id: params[:relation_id]
params[:friend_id]
params[:relationship]
params
Parentparams
continue
friend
continue
@friend
friend
continue
friend
continue
friend
continue
friend
continue
@friend
friend
continue
family_member
continue
family_member_params['friend_id']
params['friend_id']
continue
family_member
continue
    8:     end
    7:       format.js
respond_to do |format|
family_member = FamilyMember.create(family_member_params)
